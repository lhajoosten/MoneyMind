[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "moneymind"
version = "0.1.0"
description = "Intelligent personal finance application with AI insights"
authors = [
    {name = "Luc Joosten", email = "your.email@example.com"},
]
requires-python = ">=3.11"
dependencies = [
    # FastAPI ecosystem
    "fastapi>=0.104.0",
    "uvicorn[standard]>=0.24.0",
    "pydantic[email]>=2.5.0",
    "pydantic-settings>=2.1.0",
    
    # Database
    "sqlalchemy>=2.0.0",
    "alembic>=1.13.0",
    "asyncpg>=0.29.0",  # PostgreSQL async driver
    "aiosqlite>=0.19.0",  # SQLite async driver for testing
    
    # Authentication
    "python-jose[cryptography]>=3.3.0",
    "passlib[bcrypt]>=1.7.4",
    "python-multipart>=0.0.6",
    
    # AI/LLM Integration
    "langchain>=0.1.0",
    "langchain-openai>=0.0.5",
    "langchain-community>=0.0.10",
    
    # Data processing
    "pandas>=2.1.0",
    "numpy>=1.25.0",
    
    # Utilities
    "python-dotenv>=1.0.0",
    "structlog>=23.2.0",
    "dependency-injector>=4.41.0",
    
    # File processing
    "openpyxl>=3.1.0",  # Excel files
    "chardet>=5.2.0",   # CSV encoding detection
]

[project.optional-dependencies]
dev = [
    # Testing
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-mock>=3.12.0",
    "pytest-cov>=4.1.0",  # Coverage reporting
    "httpx>=0.25.0",  # For testing FastAPI
    
    # Code quality
    "ruff>=0.1.6",
    "mypy>=1.7.0",
    "pre-commit>=3.5.0",
    
    # Development
    "ipython>=8.17.0",
    "rich>=13.7.0",  # Better console output
]

[tool.ruff]
# Same line length as C# recommendations
line-length = 120
target-version = "py311"

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "ARG", # flake8-unused-arguments
    "SIM", # flake8-simplify
]
ignore = [
    "E501",  # Line too long (handled by formatter)
    "B008",  # Do not perform function calls in argument defaults
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
asyncio_mode = "auto"
addopts = [
    "--strict-markers",
    "--disable-warnings",
    "-v",
    "--cov=app",
    "--cov-report=xml",
    "--cov-report=html",
    "--cov-report=term-missing",
]
markers = [
    "unit: Unit tests",
    "integration: Integration tests",
    "slow: Slow running tests",
]

[tool.mypy]
python_version = "3.11"
strict = true
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[tool.hatch.build.targets.wheel]
packages = ["app"]