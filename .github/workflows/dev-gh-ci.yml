name: CI - Dev Matrix

on:
  push:
    branches: [ main, development ]
  pull_request:
    branches: [ main, development ]

jobs:
  backend:
    name: Backend (Python ${{ matrix.python-version }})
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.11, 3.12]
    env:
      PYTHONPATH: backend
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/backend/requirements.txt') }}
      - name: Install backend deps
        working-directory: backend
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Lint (flake8) if present
        working-directory: backend
        run: |
          if command -v flake8 >/dev/null 2>&1; then flake8 . || true; fi
      - name: Type check (mypy) if present
        working-directory: backend
        run: |
          if command -v mypy >/dev/null 2>&1; then mypy . || true; fi
      - name: Run tests
        working-directory: backend
        run: |
          if [ -d tests ] || [ -f pytest.ini ]; then pytest -q --maxfail=1; fi
      - name: Upload backend coverage artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: backend-coverage-${{ matrix.python-version }}
          path: backend/coverage.xml || backend/htmlcov || ''

  frontend:
    name: Frontend (Node ${{ matrix.node-version }})
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [21, 22]
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      - name: Install frontend deps
        working-directory: frontend
        run: |
          if [ -f package-lock.json ]; then npm ci; else npm install; fi
      - name: Lint (eslint) if present
        working-directory: frontend
        run: |
          if [ -f package.json ] && grep -q "eslint" package.json; then npm run lint --if-present || true; fi
      - name: Typecheck (tsc) if present
        working-directory: frontend
        run: |
          if [ -f tsconfig.json ]; then npm run type-check --if-present || npx tsc --noEmit || true; fi
      - name: Run tests
        working-directory: frontend
        run: |
          if [ -f package.json ]; then npm test -- --watchAll=false || true; fi
      - name: Build
        working-directory: frontend
        run: |
          if [ -f package.json ]; then npm run build --if-present || true; fi
      - name: Upload frontend build artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: frontend-build-${{ matrix.node-version }}
          path: frontend/build || frontend/dist || ''